plugins {
    id 'application'
    id 'org.graalvm.buildtools.native' version '0.10.3'
}
description = 'Ignite commands'

dependencies{
    // https://mvnrepository.com/artifact/info.picocli/picocli-shell-jline3
    implementation 'info.picocli:picocli-shell-jline3:4.7.6'
    implementation project(':ignite-common')
    implementation project(':ignite-thinclient')
    testImplementation 'org.testcontainers:junit-jupiter:1.20.3'
    testImplementation testFixtures(project(":ignite-common"))
    annotationProcessor 'info.picocli:picocli-codegen:4.7.6'
    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation 'commons-io:commons-io:2.17.0'
}

application {
    mainClass='com.boomi.mashery.ignite.main.Main'
    applicationDefaultJvmArgs=["--add-opens","java.base/jdk.internal.misc=ALL-UNNAMED",
                "--add-opens","java.base/sun.nio.ch=ALL-UNNAMED",
                "--add-opens","java.base/sun.nio.ch=ALL-UNNAMED",
                "--add-opens","java.management/com.sun.jmx.mbeanserver=ALL-UNNAMED",
                "--add-opens","jdk.internal.jvmstat/sun.jvmstat.monitor=ALL-UNNAMED",
                "--add-opens","java.base/sun.reflect.generics.reflectiveObjects=ALL-UNNAMED",
                "--add-opens","jdk.management/com.sun.management.internal=ALL-UNNAMED",
                "--add-opens","java.base/java.io=ALL-UNNAMED",
                "--add-opens","java.base/java.nio=ALL-UNNAMED",
                "--add-opens","java.base/java.util=ALL-UNNAMED",
                "--add-opens","java.base/java.lang=ALL-UNNAMED",
                "--add-opens","java.base/java.util.concurrent.atomic=ALL-UNNAMED",
                "--add-opens","java.base/java.net=ALL-UNNAMED",
]
}

graalvmNative{
    binaries {
        main {
            imageName = "abracadabra"
            mainClass = "com.boomi.mashery.ignite.main.Main"
            buildArgs.add("-O4")
            //useFatJar=true
            sharedLibrary=false
        }
        test {
            buildArgs.add("-O0")
        }
    }
    binaries.all {
        buildArgs.add("--verbose")
    }
}
distTar {
    compression = Compression.GZIP
    archiveExtension = "tar.gz"
}
tasks.distZip.enabled = false
